{"ast":null,"code":"import _slicedToArray from \"D:\\\\GitHub\\\\proyecto-21-junio\\\\main\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\GitHub\\\\proyecto-21-junio\\\\main\\\\client\\\\src\\\\Components\\\\Todos.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport TodoItem from './TodoItem';\nimport TodoService from '../Services/TodoService';\nimport Message from './Message';\nimport { AuthContext } from '../Context/AuthContext';\n\nconst Todos = props => {\n  const _useState = useState({\n    name: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        todo = _useState2[0],\n        setTodo = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        todos = _useState4[0],\n        setTodos = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        message = _useState6[0],\n        setMessage = _useState6[1];\n\n  const authContext = useContext(AuthContext);\n  useEffect(() => {\n    TodoService.getTodos().then(data => {\n      setTodos(data.todos);\n    });\n  }, []);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    TodoService.postTodo(todo).then(data => {\n      const message = data.message;\n      resetForm();\n\n      if (!message.msgError) {\n        TodoService.getTodos().then(getData => {\n          setTodos(getData.todos);\n          setMessage(message);\n        });\n      } else if (message.msgBody === \"UnAuthorized\") {\n        setMessage(message);\n        authContext.setUser({\n          username: \"\",\n          role: \"\"\n        });\n        authContext.setIsAuthenticated(false);\n      } else {\n        setMessage(message);\n      }\n    });\n  };\n\n  const onChange = e => {\n    setTodo({\n      name: e.target.value\n    });\n  };\n\n  const resetForm = () => {\n    setTodo({\n      name: \"\"\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, message ? React.createElement(Message, {\n    message: message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }) : null, React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"todo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Enter Todo\")), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"todo\",\n    value: todo.name,\n    onChange: onChange,\n    className: \"form-control m-3\",\n    placeholder: \"Please Enter Todo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"btn  btn-primary m-2\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Submit\")), React.createElement(\"ul\", {\n    className: \"list-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, todos.map(todo => {\n    return React.createElement(TodoItem, {\n      key: todo._id,\n      todo: todo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    });\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }));\n};\n\nexport default Todos;","map":{"version":3,"sources":["D:/GitHub/proyecto-21-junio/main/client/src/Components/Todos.js"],"names":["React","useState","useContext","useEffect","TodoItem","TodoService","Message","AuthContext","Todos","props","name","todo","setTodo","todos","setTodos","message","setMessage","authContext","getTodos","then","data","onSubmit","e","preventDefault","postTodo","resetForm","msgError","getData","msgBody","setUser","username","role","setIsAuthenticated","onChange","target","value","map","_id"],"mappings":"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","sourcesContent":["import React, {useState,useContext,useEffect} from 'react';\r\nimport TodoItem from './TodoItem';\r\nimport TodoService from '../Services/TodoService';\r\nimport Message from './Message';\r\nimport { AuthContext } from '../Context/AuthContext';\r\n\r\nconst Todos = props =>{\r\n    const [todo,setTodo] = useState({name : \"\"});\r\n    const [todos,setTodos] = useState([]);\r\n    const [message,setMessage] = useState(null);\r\n    const authContext = useContext(AuthContext);\r\n    \r\n    useEffect(()=>{\r\n        TodoService.getTodos().then(data =>{\r\n            setTodos(data.todos);\r\n        });\r\n    },[]);\r\n\r\n    const onSubmit = e =>{\r\n        e.preventDefault();\r\n        TodoService.postTodo(todo).then(data =>{\r\n            const { message } = data;\r\n            resetForm();\r\n            if(!message.msgError){\r\n                TodoService.getTodos().then(getData =>{\r\n                    setTodos(getData.todos);\r\n                    setMessage(message);\r\n                });\r\n            }\r\n            else if(message.msgBody === \"UnAuthorized\"){\r\n                setMessage(message);\r\n                authContext.setUser({username : \"\", role : \"\"});\r\n                authContext.setIsAuthenticated(false);\r\n            }\r\n            else{\r\n                setMessage(message);\r\n            }\r\n        });\r\n    }\r\n\r\n    const onChange = e =>{\r\n        setTodo({name : e.target.value});\r\n    }\r\n\r\n    const resetForm = ()=>{\r\n        setTodo({name : \"\"});\r\n    }\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            {message ? <Message message={message}/> : null}\r\n            <form onSubmit={onSubmit}>\r\n                <label htmlFor=\"todo\"><h2>Enter Todo</h2></label>\r\n                <input type=\"text\" \r\n                       name=\"todo\" \r\n                       value={todo.name} \r\n                       onChange={onChange}\r\n                       className=\"form-control m-3\"\r\n                       placeholder=\"Please Enter Todo\"/>\r\n                <button className=\"btn  btn-primary m-2\" \r\n                        type=\"submit\">Submit</button>\r\n            </form>\r\n            <ul className=\"list-group\">\r\n                {\r\n                    todos.map(todo =>{\r\n                        return <TodoItem key={todo._id} todo={todo}/>\r\n                    })\r\n                }\r\n            </ul>\r\n            <br/>\r\n            \r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Todos;"]},"metadata":{},"sourceType":"module"}